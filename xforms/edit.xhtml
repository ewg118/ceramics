<html xmlns="http://www.w3.org/1999/xhtml" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xxforms="http://orbeon.org/oxf/xml/xforms" xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
	xmlns:res="http://www.w3.org/2005/sparql-results#" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:foaf="http://xmlns.com/foaf/0.1/"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:skos="http://www.w3.org/2004/02/skos/core#" xmlns:owl="http://www.w3.org/2002/07/owl#"
	xmlns:ecrm="http://erlangen-crm.org/current/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
	xmlns:kid="http://kerameikos.org/id/" xmlns:kon="http://kerameikos.org/ontology#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
	xmlns:atom="http://www.w3.org/2005/Atom" xmlns:kerameikos="https://github.com/kerameikos/">
	<head>
		<title>Kerameikos: LOD Editor</title>
		<link rel="stylesheet" href="/fr/style/bootstrap/css/bootstrap.css" type="text/css"/>
		<link rel="stylesheet" href="/fr/style/form-runner-bootstrap-override.css" type="text/css"/>

		<link rel="stylesheet" href="http://netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css"/>
		<script type="text/javascript" src="http://netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"/>
		<link rel="shortcut icon" href="/ops/images/orbeon-icon-16.ico"/>
		<link rel="icon" href="/ops/images/orbeon-icon-16.png" type="image/png"/>
		<link rel="stylesheet" href="/apps/ceramics/xforms/css/style.css"/>

		<xforms:model>
			<xforms:instance id="doc" xxforms:exclude-result-prefixes="#all">
				<rdf:RDF xmlns:foaf="http://xmlns.com/foaf/0.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
					xmlns:skos="http://www.w3.org/2004/02/skos/core#" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:ecrm="http://erlangen-crm.org/current/"
					xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#" xmlns:dcterms="http://purl.org/dc/terms/"
					xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:xsd="http://www.w3.org/2001/XMLSchema#" xmlns:kid="http://kerameikos.org/id/"
					xmlns:kon="http://kerameikos.org/ontology#"/>
			</xforms:instance>

			<xforms:instance id="control-instance">
				<controls xmlns="">
					<id/>
					<original-id/>
					<save-trigger>false</save-trigger>
					<delete-trigger/>
					<delete-success/>
					<status/>
					<type/>
					<atom-type/>
					<atom-search/>
					<atom-id/>
					<atom-summary/>
					<id_path>/usr/local/projects/ceramic-ids/id/</id_path>
					<endpoint>http://localhost:3030/ceramics/</endpoint>
					<solr_url>http://localhost:8080/solr/ceramics/</solr_url>
					<dump/>
				</controls>
			</xforms:instance>

			<xforms:instance id="load-config">
				<config xmlns="">
					<url/>
					<content-type>application/xml</content-type>
					<mode>xml</mode>
				</config>
			</xforms:instance>

			<xforms:instance id="save-config">
				<config xmlns="">
					<url/>
					<content-type>application/xml</content-type>
					<make-directories>false</make-directories>
					<append>false</append>
				</config>
			</xforms:instance>

			<xforms:instance id="delete-config">
				<config xmlns="">
					<delete>
						<url/>
					</delete>
				</config>
			</xforms:instance>

			<xforms:instance id="dump">
				<dump xmlns=""/>
			</xforms:instance>

			<!-- REST responses -->
			<!-- local atom feed -->
			<xforms:instance id="feed">
				<feed xmlns=""/>
			</xforms:instance>

			<!-- itemsets -->
			<xforms:instance id="languages">
				<xi:include href="instances/languages.xml"/>
			</xforms:instance>

			<xforms:instance id="classes">
				<classes xmlns="">
					<class>
						<label>Material</label>
						<type>ecrm:E57_Material</type>
					</class>
					<class>
						<label>Organization</label>
						<type>foaf:Organization</type>
					</class>
					<class>
						<label>Period</label>
						<type>ecrm:E4_Period</type>
					</class>
					<class>
						<label>Person</label>
						<type>foaf:Person</type>
					</class>
					<class>
						<label>Place</label>
						<type>ecrm:E53_Place</type>
					</class>
					<class>
						<label>Shape</label>
						<type>kon:Shape</type>
					</class>
					<class>
						<label>Technique</label>
						<type>kon:Technique</type>
					</class>
					<class>
						<label>Ware</label>
						<type>kon:Ware</type>
					</class>
				</classes>
			</xforms:instance>


			<!-- RDF elements -->
			<!-- properties -->
			<xforms:instance id="prefLabel-template" xxforms:exclude-result-prefixes="#all">
				<skos:prefLabel xml:lang=""/>
			</xforms:instance>

			<xforms:instance id="altLabel-template" xxforms:exclude-result-prefixes="#all">
				<skos:altLabel xml:lang=""/>
			</xforms:instance>

			<xforms:instance id="definition-template" xxforms:exclude-result-prefixes="#all">
				<skos:definition xml:lang=""/>
			</xforms:instance>

			<xforms:instance id="related-template" xxforms:exclude-result-prefixes="#all">
				<skos:related rdf:resource=""/>
			</xforms:instance>

			<xforms:instance id="exactMatch-template" xxforms:exclude-result-prefixes="#all">
				<skos:exactMatch rdf:resource=""/>
			</xforms:instance>

			<xforms:instance id="isPartOf-template" xxforms:exclude-result-prefixes="#all">
				<dcterms:isPartOf rdf:resource=""/>
			</xforms:instance>

			<xforms:instance id="lat-template" xxforms:exclude-result-prefixes="#all">
				<geo:lat rdf:datatype="xsd:float"/>
			</xforms:instance>

			<xforms:instance id="long-template" xxforms:exclude-result-prefixes="#all">
				<geo:long rdf:datatype="xsd:float"/>
			</xforms:instance>

			<xforms:instance id="comment-template" xxforms:exclude-result-prefixes="#all">
				<rdfs:comment xml:lang=""/>
			</xforms:instance>

			<xforms:instance id="seeAlso-template" xxforms:exclude-result-prefixes="#all">
				<rdfs:seeAlso rdf:resource=""/>
			</xforms:instance>

			<!-- sparql update -->
			<xforms:instance id="sparqlUpdate-template">
				<query>
					<![CDATA[DELETE {?s ?p ?o} WHERE { <URI> ?p ?o . ?s ?p ?o . FILTER (?s = <URI>) }]]>
				</query>
			</xforms:instance>
			<xforms:instance id="sparqlUpdate">
				<query/>
			</xforms:instance>

			<!-- Solr instances -->
			<xforms:instance id="addIndex">
				<add xmlns=""/>
			</xforms:instance>
			<xforms:instance id="sendCommit">
				<commit/>
			</xforms:instance>
			<xforms:instance id="deleteId">
				<delete xmlns="">
					<id/>
				</delete>
			</xforms:instance>

			<xforms:action ev:event="xforms-model-construct-done">
				<!-- load id if parameter is passed -->
				<xforms:action if="string(xxforms:get-request-parameter('id'))">
					<xforms:setvalue ref="instance('control-instance')/id" value="xxforms:get-request-parameter('id')"/>
					<xforms:setvalue ref="instance('control-instance')/original-id" value="xxforms:get-request-parameter('id')"/>
					<xforms:setvalue ref="instance('load-config')/url"
						value="concat('file://', instance('control-instance')/id_path, xxforms:get-request-parameter('id'), '.xml')"/>
					<xforms:insert nodeset="instance('doc')"
						origin="xxforms:call-xpl('oxf:/apps/ceramics/xpl/load-id.xpl', 'file', instance('load-config'), 'data')"/>
				</xforms:action>
			</xforms:action>

			<!-- **************** BINDINGS ********************** -->
			<xforms:bind nodeset="instance('doc')">
				<xforms:bind nodeset="@rdf:about" required="true()" type="xs:anyURI" readonly="string-length(instance('control-instance')/id) &gt; 0"/>
				<!--<xforms:bind nodeset="@typeof" required="true()"/>-->
				<!-- handle top-level rdf:type -->
				<xforms:bind nodeset="*">
					<xforms:bind nodeset="skos:prefLabel" required="true()">
						<xforms:bind nodeset="@xml:lang"
							constraint="string-length(.) &gt; 0 and count(parent::node()/parent::node()/skos:prefLabel[@xml:lang='en']) = 1 and count(parent::node()/parent::node()/skos:prefLabel/@xml:lang) = count(distinct-values(parent::node()/parent::node()/skos:prefLabel/@xml:lang))"
						/>
					</xforms:bind>
					<xforms:bind nodeset="skos:altLabel" required="true()">
						<xforms:bind nodeset="@xml:lang" constraint="string-length(.) &gt; 0"/>
					</xforms:bind>
					<xforms:bind nodeset="skos:definition" required="true()">
						<xforms:bind nodeset="@xml:lang"
							constraint="string-length(.) &gt; 0 and count(parent::node()/parent::node()/skos:definition[@xml:lang='en']) = 1 and count(parent::node()/parent::node()/skos:definition/@xml:lang) = count(distinct-values(parent::node()/parent::node()/skos:definition/@xml:lang))"
						/>
					</xforms:bind>
					<xforms:bind nodeset="rdfs:comment" required="true()">
						<xforms:bind nodeset="@xml:lang" constraint="string-length(.) &gt; 0"/>
					</xforms:bind>
					<xforms:bind nodeset="rdfs:seeAlso">
						<xforms:bind nodeset="@rdf:resource" required="true()" type="xs:anyURI"/>
					</xforms:bind>
					<xforms:bind nodeset="skos:related">
						<xforms:bind nodeset="@rdf:resource" required="true()" type="xs:anyURI"/>
					</xforms:bind>
					<xforms:bind nodeset="skos:exactMatch">
						<xforms:bind nodeset="@rdf:resource" required="true()" type="xs:anyURI"/>
					</xforms:bind>
					<xforms:bind nodeset="dcterms:isPartOf">
						<xforms:bind nodeset="@rdf:resource" required="true()"/>
					</xforms:bind>
					<xforms:bind nodeset="geo:lat" constraint="(number(.) &gt; -180 and number(.) &lt; 180)"/>
					<xforms:bind nodeset="geo:long" constraint="(number(.) &gt; -180 and number(.) &lt; 180)"/>
				</xforms:bind>
			</xforms:bind>

			<xforms:bind nodeset="instance('control-instance')">
				<xforms:bind nodeset="id" required="true()" type="xs:anyURI"/>
				<xforms:bind nodeset="delete-success" type="xs:boolean"/>
				<xforms:bind nodeset="save-trigger" type="xs:boolean"/>
			</xforms:bind>

			<!-- only enable save button if doc is valid and save-trigger is true -->
			<xforms:bind id="save-trigger" nodeset="instance('control-instance')/save-trigger" relevant=".= true()"/>

			<!-- bind the delete trigger only to those ids which exist on disk (either loaded or recently saved) -->
			<xforms:bind id="delete-trigger" nodeset="instance('control-instance')/delete-trigger" relevant="string(instance('control-instance')/id)"/>

			<xforms:action ev:event="xxforms-invalid" ev:observer="doc">
				<xforms:setvalue ref="instance('control-instance')/save-trigger" value="false()"/>
			</xforms:action>
			<xforms:action ev:event="xxforms-valid" ev:observer="doc">
				<xforms:setvalue ref="instance('control-instance')/save-trigger" value="true()"/>
			</xforms:action>

			<!-- ************* QUERY ATOM **********************-->
			<!-- query local atom feed to power skos:broader -->
			<xforms:submission id="query-feed" serialization="none" method="get"
				action="/ceramics/feed/?q=type:&#x022;{encode-for-uri(instance('control-instance')/atom-type)}&#x022;+{instance('control-instance')/atom-search}&amp;sort=score+desc"
				instance="feed" replace="instance">
				<xforms:message ev:event="xforms-submit-error" level="modal">Unable to communicate with kerameikos.org Atom feed.</xforms:message>
			</xforms:submission>

			<!-- ************* SPARQL SUBMISSIONS **********************-->
			<xforms:submission id="delete-graph" action="{instance('control-instance')/endpoint}update" ref="instance('sparqlUpdate')"
				serialization="text/plain" replace="none" method="post" mediatype="application/sparql-update">
				<xforms:action ev:event="xforms-submit-error">
					<xforms:message level="modal">SPARQL update failed.</xforms:message>
					<xforms:setvalue ref="instance('control-instance')/delete-success" value="false()"/>
				</xforms:action>
				<xforms:action ev:event="xforms-submit-done">
					<xforms:setvalue ref="instance('control-instance')/delete-success" value="true()"/>
				</xforms:action>
			</xforms:submission>

			<xforms:submission id="post-new" action="{instance('control-instance')/endpoint}data?default" ref="instance('doc')" replace="none" method="post"
				mediatype="application/rdf+xml">
				<xforms:setvalue ev:event="xforms-submit-done" ref="instance('control-instance')/status">Successfully posted to endpoint.</xforms:setvalue>
				<xforms:message ev:event="xforms-submit-error" level="modal">Post to endpoint failed.</xforms:message>
			</xforms:submission>

			<!-- ************************* SOLR SUBMISSIONS ************************** -->
			<!-- post instance to Solr -->
			<xforms:submission id="post-solr-doc" action="{instance('control-instance')/solr_url}update" ref="instance('addIndex')" instance="addIndex"
				replace="instance" method="post">
				<xforms:message ev:event="xforms-submit-error" level="modal">Data Failed to POST to Solr. Index may be offline or URL is
					incorrect.</xforms:message>
				<xforms:send submission="submit-commit" ev:event="xforms-submit-done"/>
			</xforms:submission>

			<xforms:submission id="delete-id-from-solr" action="{instance('control-instance')/solr_url}update" ref="instance('deleteId')" instance="deleteId"
				replace="instance" method="post">
				<xforms:action ev:event="xforms-submit-error">
					<xforms:message level="modal">Data Failed to POST to Solr. Index may be offline or URL is incorrect.</xforms:message>
					<xforms:setvalue ref="instance('control-instance')/delete-success" value="false()"/>
				</xforms:action>
				<xforms:action ev:event="xforms-submit-done">
					<xforms:send submission="submit-commit"/>
					<xforms:setvalue ref="instance('control-instance')/delete-success" value="true()"/>
				</xforms:action>
			</xforms:submission>

			<!-- send commit -->
			<xforms:submission id="submit-commit" action="{instance('control-instance')/solr_url}update" ref="instance('sendCommit')" instance="sendCommit"
				replace="none" method="post">
				<xforms:action ev:event="xforms-submit-error">
					<xforms:message level="modal">Failed to commit to Solr index.</xforms:message>
					<xforms:setvalue ref="instance('control-instance')/delete-success" value="false()"/>
				</xforms:action>
				<xforms:action ev:event="xforms-submit-done">
					<xforms:setvalue ev:event="xforms-submit-done" ref="instance('control-instance')/status">Document successfully committed to
						Solr.</xforms:setvalue>
					<xforms:setvalue ref="instance('control-instance')/delete-success" value="true()"/>
				</xforms:action>
			</xforms:submission>
		</xforms:model>
		<!-- XBL components -->
		<xi:include href="xbl/dbpedia/dbpedia.xbl" xi:omit-xml-base="true"/>
		<xi:include href="xbl/getty/getty.xbl" xi:omit-xml-base="true"/>
		<xi:include href="xbl/pleiades/pleiades.xbl" xi:omit-xml-base="true"/>
		<xi:include href="xbl/viaf/viaf.xbl" xi:omit-xml-base="true"/>
	</head>

	<body>
		<xforms:var name="display_path">../</xforms:var>
		<!--<xi:include href="header.xml"/>-->
		<div class="container-fluid">
			<div class="row">
				<div class="col-md-9">
					<p><a href="../"><span class="glyphicon glyphicon-arrow-left"/>Return to Admin</a></p>
					<xforms:group ref=".[string-length(instance('control-instance')/status) &gt; 0]">
						<div class="info">
							<p>
								<strong>Status:</strong>
								<xforms:output ref="instance('control-instance')/status"/>
							</p>
						</div>
					</xforms:group>
					<xforms:group
						ref=".[count(instance('doc')/*/skos:prefLabel/@xml:lang) &gt; count(instance('doc')/*/skos:prefLabel/@xml:lang[not(preceding::skos:prefLabel/@xml:lang = .)])]">
						<div class="warning">
							<p>
								<strong>Alert:</strong> Preferred label languages must be unique. </p>
						</div>
					</xforms:group>
					<xforms:group
						ref=".[count(instance('doc')/*/skos:definition/@xml:lang) &gt; count(instance('doc')/*/skos:definition/@xml:lang[not(preceding::skos:definition/@xml:lang = .)])]">
						<div class="warning" style="padding: 0 .7em;">
							<p>
								<strong>Alert:</strong> Definition languages must be unique. </p>
						</div>
					</xforms:group>
					<!-- *************** SUBMISSIONS ***************-->
					<div class="submission">
						<xforms:trigger bind="save-trigger">
							<xforms:label><span class="glyphicon glyphicon-floppy-disk"/>Save</xforms:label>
							<xforms:action ev:event="DOMActivate">
								<!-- set id -->
								<xforms:setvalue ref="instance('doc')/*/@rdf:about" value="concat('http://kerameikos.org/id/', instance('control-instance')/id)"/>
								<!-- save file back to disk -->
								<xforms:setvalue ref="instance('save-config')/url"
									value="concat('file://', instance('control-instance')/id_path, instance('control-instance')/id, '.xml')"/>
								<xforms:insert nodeset="instance('dump')"
									origin="xxforms:call-xpl('oxf:/apps/ceramics/xpl/save-id.xpl', ('doc', 'configuration'), (instance('doc'), instance('save-config')), 'data')"/>
								<!-- first RDF to triplestore -->
								<xforms:setvalue ref="instance('sparqlUpdate')"
									value="replace(instance('sparqlUpdate-template'), 'URI', instance('doc')/*/@rdf:about)"/>
								<xforms:send submission="delete-graph"/>
								<xforms:send submission="post-new"/>
								<!-- post to Solr -->
								<xforms:insert nodeset="instance('addIndex')"
									origin="xxforms:call-xpl('oxf:/apps/ceramics/xpl/id-to-solr.xpl', 'data', instance('doc'), 'data')"/>
								<xforms:send submission="post-solr-doc"/>
							</xforms:action>
						</xforms:trigger>
						<xforms:trigger bind="delete-trigger">
							<xforms:label class="file_control"><span class="glyphicon glyphicon-remove"/>Delete</xforms:label>
							<xforms:dispatch ev:event="DOMActivate" target="delete-dialog" name="fr-show"/>
						</xforms:trigger>
					</div>
					<div>
						<h1>Edit ID</h1>
						<div>
							<xforms:input ref="instance('control-instance')/id">
								<xforms:label>id</xforms:label>
								<xforms:alert>Required</xforms:alert>
							</xforms:input>
							<xforms:group ref=".[string-length(instance('control-instance')/id) &gt; 0]">
								<a href="http://kerameikos.org/id/{instance('control-instance')/id}"> (<xforms:output
										ref="concat('http://kerameikos.org/id/', instance('control-instance')/id)"/>)</a>
							</xforms:group>
						</div>
						<xforms:group ref=".[not(instance('doc')/child::node())]">
							<h3>Select Class</h3>
							<div>
								<xforms:select1 ref="instance('control-instance')/type">
									<xforms:label>Type</xforms:label>
									<xforms:alert>Required</xforms:alert>
									<xforms:item>
										<xforms:label>Select...</xforms:label>
										<xforms:value/>
									</xforms:item>
									<xforms:itemset nodeset="instance('classes')/class">
										<xforms:label ref="label"/>
										<xforms:value ref="type"/>
									</xforms:itemset>
									<xforms:action ev:event="xforms-value-changed">
										<xforms:var name="type" select="."/>
										<!-- create resource description -->
										<xforms:insert context="instance('doc')" origin="xforms:element($type, xforms:attribute('rdf:about', ''))"/>
										<!-- insert skos:prefLabel and skos:definition with @xml:lang='en'-->
										<xforms:insert context="instance('doc')/*" origin="xforms:element('skos:prefLabel', xforms:attribute('xml:lang', 'en'))"/>
										<xforms:insert context="instance('doc')/*" nodeset="./child::node()[last()]"
											origin="xforms:element('skos:definition', xforms:attribute('xml:lang', 'en'))"/>
										<!-- insert rdf:type as skos:Concept -->
										<xforms:insert context="instance('doc')/*"
											origin="xforms:element('rdf:type', xforms:attribute('rdf:resource', 'http://www.w3.org/2004/02/skos/core#Concept'))"
										/>
									</xforms:action>
								</xforms:select1>
							</div>
						</xforms:group>
						<div class="section">
							<xforms:group ref="instance('doc')" id="form">
								<xforms:group ref="*">
									<xforms:var name="type" select="name()"/>
									<h3>
										<xforms:output ref="instance('classes')/class[type=$type]/label"/>
									</h3>
									<div class="trigger_container">
										<span class="subhead">Insert: </span>
										<xforms:trigger appearance="minimal">
											<xforms:label>
												<span class="glyphicon glyphicon-plus"/>Preferred Label</xforms:label>
											<xforms:insert ev:event="DOMActivate" origin="instance('prefLabel-template')" context="."
												nodeset="./child::node()[last()]"/>
										</xforms:trigger>
										<span> | </span>
										<xforms:trigger appearance="minimal">
											<xforms:label>
												<span class="glyphicon glyphicon-plus"/>Alternate Label</xforms:label>
											<xforms:insert ev:event="DOMActivate" origin="instance('altLabel-template')" context="."
												nodeset="./child::node()[last()]"/>
										</xforms:trigger>
										<xforms:trigger appearance="minimal">
											<xforms:label>
												<span class="glyphicon glyphicon-plus"/>Broader Concept</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:setvalue ref="instance('control-instance')/atom-type"
													value="concat(namespace-uri(instance('doc')/*), instance('doc')/*/local-name())"/>
												<xxforms:show dialog="broader-dialog"/>
											</xforms:action>
										</xforms:trigger>
										<xforms:group ref=".[count(geo:lat) = 0 and name()='ecrm:E53_Place']">
											<xforms:trigger appearance="minimal">
												<xforms:label>
													<span class="glyphicon glyphicon-plus"/>Coordinates</xforms:label>
												<xforms:action ev:event="DOMActivate">
													<xforms:insert context="." nodeset="./child::node()[last()]" origin="instance('lat-template')"/>
													<xforms:insert context="." nodeset="./child::node()[last()]" origin="instance('long-template')"/>
												</xforms:action>
											</xforms:trigger>
										</xforms:group>
										<xforms:trigger appearance="minimal">
											<xforms:label>
												<span class="glyphicon glyphicon-plus"/>Definition</xforms:label>
											<xforms:insert ev:event="DOMActivate" origin="instance('definition-template')" context="."/>
										</xforms:trigger>
										<!--<xforms:trigger appearance="minimal">
										<xforms:label>
											<span class="glyphicon glyphicon-plus"/>Comment</xforms:label>
										<xforms:insert ev:event="DOMActivate" origin="instance('comment-template')" context="."
											nodeset="./child::node()[last()]"/>
									</xforms:trigger>-->
										<xforms:trigger appearance="minimal">
											<xforms:label>
												<span class="glyphicon glyphicon-plus"/>Exact Concept</xforms:label>
											<xforms:insert ev:event="DOMActivate" origin="instance('exactMatch-template')" context="."
												nodeset="./child::node()[last()]"/>
										</xforms:trigger>
										<xforms:trigger appearance="minimal">
											<xforms:label>
												<span class="glyphicon glyphicon-plus"/>Related Concept</xforms:label>
											<xforms:insert ev:event="DOMActivate" origin="instance('related-template')" context="."
												nodeset="./child::node()[last()]"/>
										</xforms:trigger>
										<xforms:trigger appearance="minimal">
											<xforms:label>
												<span class="glyphicon glyphicon-plus"/>Related Web Page</xforms:label>
											<xforms:insert ev:event="DOMActivate" origin="instance('seeAlso-template')" context="."
												nodeset="./child::node()[last()]"/>
										</xforms:trigger>
									</div>
									<div class="section">
										<h4>Labels and Definitions</h4>
										<xforms:repeat nodeset="skos:prefLabel">
											<div>
												<xforms:input ref=".">
													<xforms:label ref="name()"/>
													<xforms:alert>Required</xforms:alert>
												</xforms:input>
												<xforms:select1 ref="@xml:lang">
													<xforms:item>
														<xforms:label>Select...</xforms:label>
														<xforms:value/>
													</xforms:item>
													<xforms:itemset nodeset="instance('languages')/language">
														<xforms:label ref="."/>
														<xforms:value ref="@value"/>
													</xforms:itemset>
													<xforms:alert>Required; English label most occur once.</xforms:alert>
												</xforms:select1>
												<xforms:group ref=".[count(instance('doc')/*/skos:prefLabel) &gt; 1]">
													<xforms:trigger appearance="minimal">
														<xforms:delete ev:event="DOMActivate" context="."/>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"/>
														</xforms:label>
													</xforms:trigger>
												</xforms:group>
											</div>
										</xforms:repeat>
										<xforms:repeat nodeset="skos:altLabel">
											<div>
												<xforms:input ref=".">
													<xforms:label ref="name()"/>
													<xforms:alert>Required</xforms:alert>
												</xforms:input>
												<xforms:select1 ref="@xml:lang">
													<xforms:item>
														<xforms:label>Select...</xforms:label>
														<xforms:value/>
													</xforms:item>
													<xforms:itemset nodeset="instance('languages')/language">
														<xforms:label ref="."/>
														<xforms:value ref="@value"/>
													</xforms:itemset>
													<xforms:alert>Required</xforms:alert>
												</xforms:select1>
												<xforms:trigger appearance="minimal">
													<xforms:delete ev:event="DOMActivate" context="."/>
													<xforms:label>
														<span class="glyphicon glyphicon-remove"/>
													</xforms:label>
												</xforms:trigger>
											</div>
										</xforms:repeat>
										<xforms:repeat nodeset="skos:definition">
											<div>
												<xforms:textarea ref=".">
													<xforms:label ref="name()"/>
													<xforms:alert>Required</xforms:alert>
												</xforms:textarea>
												<xforms:select1 ref="@xml:lang">
													<xforms:item>
														<xforms:label>Select...</xforms:label>
														<xforms:value/>
													</xforms:item>
													<xforms:itemset nodeset="instance('languages')/language">
														<xforms:label ref="."/>
														<xforms:value ref="@value"/>
													</xforms:itemset>
													<xforms:alert>Required; English label most occur once.</xforms:alert>
												</xforms:select1>
												<xforms:group ref=".[count(instance('doc')/*/skos:definition) &gt; 1]">
													<xforms:trigger appearance="minimal">
														<xforms:delete ev:event="DOMActivate" context="."/>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"/>
														</xforms:label>
													</xforms:trigger>
												</xforms:group>
											</div>
										</xforms:repeat>
									</div>
									<xforms:group ref=".[count(skos:broader) &gt; 0]">
										<div>
											<h4>Semantic Relationships</h4>
											<xforms:repeat nodeset="skos:broader">
												<div>
													<xforms:output ref="@rdf:resource">
														<xforms:label ref="parent::node()/name()"/>
													</xforms:output>
													<xforms:trigger appearance="minimal">
														<xforms:delete ev:event="DOMActivate" context="."/>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"/>
														</xforms:label>
													</xforms:trigger>
												</div>
											</xforms:repeat>
										</div>
									</xforms:group>
									<div>
										<h4>Miscellaneous Fields</h4>
										<xforms:repeat nodeset="rdfs:comment">
											<div>
												<xforms:input ref=".">
													<xforms:label ref="name()"/>
													<xforms:alert>Required</xforms:alert>
												</xforms:input>
												<xforms:select1 ref="@xml:lang">
													<xforms:item>
														<xforms:label>Select...</xforms:label>
														<xforms:value/>
													</xforms:item>
													<xforms:itemset nodeset="instance('languages')/language">
														<xforms:label ref="."/>
														<xforms:value ref="@value"/>
													</xforms:itemset>
													<xforms:alert>Required</xforms:alert>
												</xforms:select1>
												<xforms:trigger appearance="minimal">
													<xforms:delete ev:event="DOMActivate" context="."/>
													<xforms:label>
														<span class="glyphicon glyphicon-remove"/>
													</xforms:label>
												</xforms:trigger>
											</div>
										</xforms:repeat>
										<xforms:repeat nodeset="skos:exactMatch">
											<div>
												<xforms:input ref="@rdf:resource">
													<xforms:label ref="parent::node()/name()"/>
													<xforms:alert>Required, must be URI</xforms:alert>
												</xforms:input>
												<xforms:trigger appearance="minimal">
													<xforms:delete ev:event="DOMActivate" context="."/>
													<xforms:label>
														<span class="glyphicon glyphicon-remove"/>
													</xforms:label>
												</xforms:trigger>
											</div>
										</xforms:repeat>
										<xforms:repeat nodeset="skos:related">
											<div>
												<xforms:input ref="@rdf:resource">
													<xforms:label ref="parent::node()/name()"/>
													<xforms:alert>Required, must be URI</xforms:alert>
												</xforms:input>
												<xforms:trigger appearance="minimal">
													<xforms:delete ev:event="DOMActivate" context="."/>
													<xforms:label>
														<span class="glyphicon glyphicon-remove"/>
													</xforms:label>
												</xforms:trigger>
											</div>
										</xforms:repeat>
										<xforms:repeat nodeset="rdfs:seeAlso">
											<div>
												<xforms:input ref="@rdf:resource">
													<xforms:label ref="parent::node()/name()"/>
													<xforms:alert>Required, must be URI</xforms:alert>
												</xforms:input>
												<xforms:trigger appearance="minimal">
													<xforms:delete ev:event="DOMActivate" context="."/>
													<xforms:label>
														<span class="glyphicon glyphicon-remove"/>
													</xforms:label>
												</xforms:trigger>
											</div>
										</xforms:repeat>
										<xforms:repeat nodeset="dcterms:isPartOf">
											<div>
												<xforms:select1 ref="@rdf:resource">
													<xforms:label>Field</xforms:label>
													<xforms:alert>Required</xforms:alert>
													<xforms:item>
														<xforms:label>Select...</xforms:label>
														<xforms:value/>
													</xforms:item>
													<xforms:itemset nodeset="instance('fon-response')/res:results/res:result">
														<xforms:label ref="res:binding[@name='label']/res:literal"/>
														<xforms:value ref="substring-after(res:binding[@name='uri']/res:uri, 'id/')"/>
													</xforms:itemset>
												</xforms:select1>
												<xforms:trigger appearance="minimal">
													<xforms:delete ev:event="DOMActivate" context="."/>
													<xforms:label>
														<span class="glyphicon glyphicon-remove"/>
													</xforms:label>
												</xforms:trigger>
											</div>
										</xforms:repeat>
									</div>
									<xforms:group ref=".[count(geo:lat) = 1]">
										<div>
											<h4>Coordinates</h4>
											<xforms:trigger appearance="minimal">
												<xforms:action ev:event="DOMActivate">
													<xforms:delete nodeset="geo:lat"/>
													<xforms:delete nodeset="geo:long"/>
												</xforms:action>
												<xforms:label>
													<span class="glyphicon glyphicon-remove"/>
												</xforms:label>
											</xforms:trigger>
											<div>
												<xforms:input ref="geo:lat">
													<xforms:label>Latitude</xforms:label>
													<xforms:alert>Must be decimal integer between -180 and 180</xforms:alert>
												</xforms:input>
											</div>
											<div>
												<xforms:input ref="geo:long">
													<xforms:label>Longitude</xforms:label>
													<xforms:alert>Must be decimal integer between -180 and 180</xforms:alert>
												</xforms:input>
											</div>
										</div>
									</xforms:group>
								</xforms:group>
							</xforms:group>
						</div>
						<fr:alert-dialog id="delete-dialog">
							<fr:label>Delete</fr:label>
							<fr:message>Do you wish to delete this id from ceramics? It can only be restored from GitHub.</fr:message>
							<fr:positive-choice>
								<fr:label>Yes</fr:label>
								<xforms:action ev:event="DOMActivate">
									<!-- delete from solr -->
									<xforms:setvalue ref="instance('deleteId')/id" value="instance('control-instance')/id"/>
									<xforms:send submission="delete-id-from-solr"/>
									<!-- delete from SPARQL -->
									<xforms:setvalue ref="instance('sparqlUpdate')"
										value="replace(instance('sparqlUpdate-template'), 'URI', instance('doc')/*/@rdf:about)"/>
									<xforms:send submission="delete-graph"/>
									<!-- delete id from disk -->
									<xforms:setvalue ref="instance('delete-config')/delete/url"
										value="concat('file://', instance('control-instance')/id_path, instance('control-instance')/id, '.xml')"/>
									<xforms:insert nodeset="instance('dump')"
										origin="xxforms:call-xpl('oxf:/apps/ceramics/xpl/delete-id.xpl', 'file', instance('delete-config'), 'data')"/>
									<!-- redirect to admin, only if all other processes completed successfully -->
									<xforms:load resource="/ceramics/admin/" if="instance('control-instance')/delete-success = true()"/>
								</xforms:action>
							</fr:positive-choice>
							<fr:negative-choice>
								<fr:label>No</fr:label>
							</fr:negative-choice>
						</fr:alert-dialog>
						<xxforms:dialog id="broader-dialog" appearance="full" level="modal" close="true" draggable="true" visible="false">
							<xforms:label>Broader Concept</xforms:label>
							<div>
								<xforms:input ref="instance('control-instance')/atom-search"/>
								<xforms:trigger>
									<xforms:label>Search</xforms:label>
									<!-- delete current options in the instance and initiate new query -->
									<xforms:action ev:event="DOMActivate">
										<xforms:send submission="query-feed"/>
									</xforms:action>
								</xforms:trigger>
							</div>
							<div style="width:400px;">
								<xforms:group ref=".[count(instance('feed')//atom:entry) &gt; 0]">
									<h4>Results</h4>
									<div>
										<xforms:select1 ref="instance('control-instance')/atom-id" appearance="compact">
											<xforms:itemset nodeset="instance('feed')//atom:entry">
												<xforms:label ref="atom:title"/>
												<xforms:value ref="atom:id"/>
											</xforms:itemset>
											<xforms:action ev:event="xforms-value-changed">
												<xforms:setvalue ref="instance('control-instance')/atom-summary"
													value="instance('feed')//atom:entry[atom:id = instance('control-instance')/atom-id]/atom:summary"/>
											</xforms:action>
										</xforms:select1>
										<xforms:trigger>
											<xforms:label>Select</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:insert context="instance('doc')/*" nodeset="./child::node()[last()]"
													origin="xforms:element('skos:broader', (xforms:attribute('rdf:resource', concat('http://kerameikos.org/id/', instance('control-instance')/atom-id)), ''))"/>
												<!-- blank atom search nodes and atom feed -->
												<xforms:delete nodeset="instance('feed')/*"/>
												<xforms:setvalue ref="instance('control-instance')/atom-search"/>
												<xforms:setvalue ref="instance('control-instance')/atom-id"/>
												<xforms:setvalue ref="instance('control-instance')/atom-summary"/>
												<xxforms:hide dialog="broader-dialog"/>
											</xforms:action>
										</xforms:trigger>
									</div>
									<div>
										<xforms:output ref="instance('control-instance')/atom-summary">
											<xforms:label>Definition</xforms:label>
										</xforms:output>
									</div>
								</xforms:group>
								<xforms:group ref=".[count(instance('feed')//atom:entry) = 0 and string(instance('feed')/atom:title)]">
									<h4>No results found.</h4>
								</xforms:group>
							</div>
						</xxforms:dialog>
						<!--<fr:xforms-inspector/>-->
					</div>
				</div>
				<div class="col-md-3">
					<xforms:group ref="instance('doc')/*">
						<h3>Import</h3>
						<!-- import skos:prefLabels from dbpedia for those languages that are not already in the RDF -->
						<xforms:group ref=".[skos:exactMatch[contains(@rdf:resource, 'dbpedia')]]">
							<kerameikos:dbpedia/>
						</xforms:group>
						<!-- import AAT URIs from Getty -->
						<xforms:group
							ref=".[contains(instance('doc')/*/name(), 'kon:') or instance('doc')/*/name()='ecrm:E4_Period' or instance('doc')/*/name()='ecrm:E57_Material']">
							<kerameikos:getty/>
						</xforms:group>
						<!-- extract coordinates from Pleiades if there is a Pleiades URI in skos:exactMatch, but no geo:lat and geo:long -->
						<xforms:group ref=".[name()='ecrm:E53_Place' and not(skos:exactMatch[contains(@rdf:resource, 'pleiades.stoa.org')])]">
							<kerameikos:pleiades/>
						</xforms:group>
						<!-- query VIAF to add associated URIs -->
						<xforms:group ref=".[instance('doc')/*/name()='foaf:Person' or instance('doc')/*/name()='foaf:Organization']">
							<kerameikos:viaf/>
						</xforms:group>
					</xforms:group>
				</div>
			</div>
		</div>

	</body>
</html>
